include:
  - remote: https://gitlab.com/cirecipes/autodocker/raw/v1.0b2/gitlab-autodocker.yml

stages:
  - autodocker
#  - build
#  - check
#  - knitr
#  - overleaf
#  - tex
  - sim

variables:
  R_BUILD_DIR: "build"
  R_PACKAGE_CACHE: ".cache/r"
  TEX_DIR: "Paper" # Relative to build root
  OVERLEAF_ARTIFACTS_DIR: "overleaf" # Relative to build root
  KNITR_CACHE_DIR: ".cache/knitr" # Relative to TEX_DIR
  AUTODOCKER_CONTEXT_NAME: build
  
.r:
  extends: .use-autodocker
  before_script:
    - mkdir -p /usr/local/lib/R/etc
    - mkdir -p "${R_PACKAGE_CACHE}"
    - echo "R_LIBS=${R_PACKAGE_CACHE}" > .Renviron
    - echo "R_LIBS_USER=${R_PACKAGE_CACHE}" >> .Renviron
    - echo "R_PACKAGE_CACHE=${R_PACKAGE_CACHE}" >> .Renviron
    - Rscript -e "devtools::install_dev_deps()"

  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - "${R_PACKAGE_CACHE}"

# build-release:
#   extends: .r
#   stage: build
#   script:
#     - mkdir -p "${R_BUILD_DIR}"
#     - Rscript -e "devtools::build(pkg = '.', path = '${R_BUILD_DIR}', vignettes = TRUE, binary = FALSE)"
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-package"
#     paths:
#       - "${R_BUILD_DIR}/outbreakinference*.tar.gz"
#     when: always
#
# check-release:
#   extends: .r
#   stage: check
#   script:
#     - Rscript -e "devtools::check_built(path = paste0('${R_BUILD_DIR}/', list.files('${R_BUILD_DIR}', pattern='outbreakinference.*t.*gz')[1]))"
#
# knitr:
#   extends: .use-autodocker
#   stage: knitr
#   tags:
#     - docker-mem:3
#   cache:
#     key: "$CI_COMMIT_REF_SLUG"
#     paths:
#       - "${TEX_DIR}/${KNITR_CACHE_DIR}"
#   script:
#     - find "${R_BUILD_DIR}" -name "outbreakinference*.tar.gz" -exec install2.r {} \;
#     - cd "${TEX_DIR}"
#     - Rscript -e "knitr::opts_chunk\$set(cache.path='${KNITR_CACHE_DIR}/'); knitr::knit('OutbreakInference.rnw')"
#   dependencies:
#     - build-release
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-knitr"
#     paths:
#       - "${TEX_DIR}/OutbreakInference.tex"
#       - "${TEX_DIR}/figures"
#
# overleaf:
#   extends: .use-autodocker
#   stage: overleaf
#   script:
#     - mkdir "${OVERLEAF_ARTIFACTS_DIR}"
#     - cp -r "${TEX_DIR}/OutbreakInference.tex" "${TEX_DIR}/structure.tex" "${TEX_DIR}/OutbreakInference.bib" "${TEX_DIR}/figures" "${OVERLEAF_ARTIFACTS_DIR}"
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-overleaf"
#     paths:
#       - "${OVERLEAF_ARTIFACTS_DIR}"
#
# tex:
#   extends: .use-autodocker
#   stage: tex
#   script:
#     - cd "${OVERLEAF_ARTIFACTS_DIR}"
#     - lualatex "OutbreakInference.tex"
#     - bibtex "OutbreakInference"
#     - lualatex "OutbreakInference.tex"
#     - lualatex "OutbreakInference.tex"
#     - mv "OutbreakInference.pdf" "${CI_PROJECT_DIR}"
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-pdf"
#     paths:
#       - "OutbreakInference.pdf"
      
sim:
  extends: .use-autodocker
  variables:
    AUTODOCKER_CONTEXT_NAME: sim
  stage: sim
  tags:
    - docker-cpu:comp8
  script:
    - Rscript -e "devtools::install()"
    - time Rscript Paper/SimStudy.R
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-sim"
    paths: 
      - studyResults.rds

# Set up docker image for the rest of the build, keyed off commit ID
# autodocker-build:
#   extends: .autodocker
#   tags:
#     - dind-mem:2

autodocker-sim:
  extends: .autodocker
  variables:
    AUTODOCKER_CONTEXT_NAME: sim
  tags: 
    - dind-mem:2
